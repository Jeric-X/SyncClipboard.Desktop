name: package

permissions:
  contents: write

on:
  push:
    branches:
      - '**'
    tags-ignore: 
      - 'v*'
  pull_request:

jobs:
  build:
    uses: ./.github/workflows/build-progress.yml

  # package-linux:
  #   strategy:
  #     matrix:
  #       cpu: [x64]
  #       type: [self-contained, no-self-contained]
  #       package-type: [AppImage, rpm, deb]
  #       include:
  #         - package-type: AppImage
  #           package-head: SyncClipboard-
  #           package-tail: .x86_64
  #         - package-type: rpm
  #           package-head: syncclipboard_
  #           package-tail: .x86_64
  #         - package-type: deb
  #           package-head: syncclipboard_
  #           package-tail: _amd64

  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         repository: Jeric-X/SyncClipboard
  #         ref: avalonia

  #     - name: Install .NET
  #       uses: actions/setup-dotnet@v2
  #       with:
  #         dotnet-version: 6.0.x

  #     - name: Download last-job-built artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: linux-${{ matrix.cpu }}-${{ matrix.type }}
  #         path: linux-bin/

  #     - name: Download version
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: version
  #         path: ./

  #     - name: Read version
  #       id: version
  #       uses: juliangruber/read-file-action@v1
  #       with:
  #         path: version.txt

  #     - name: Install pupnet and denpendencies
  #       run: |
  #         dotnet tool install -g KuiperZone.PupNet
  #         sudo apt install libfuse2

  #     - name: Package
  #       run: | 
  #         chmod +x PostPublish.sh
  #         pupnet linux.pupnet.conf --app-version ${{ steps.version.outputs.content }} --kind ${{ matrix.package-type }} -y
  #       working-directory: ./build/linux

  #     - name: Upload build artifacts ${{ matrix.type }} ${{ matrix.package-type }}
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: SyncClipboard_${{ steps.version.outputs.content }}_linux_${{ matrix.type }}${{ matrix.package-tail }}.${{ matrix.package-type }}
  #         path: build/linux/output/${{ matrix.package-head }}${{ steps.version.outputs.content }}-1${{ matrix.package-tail }}.${{ matrix.package-type }}

  package-macos:
    strategy:
      matrix:
        cpu: [x64]
        type: [self-contained, no-self-contained]

    runs-on: macos-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: Jeric-X/SyncClipboard
          ref: avalonia

      - name: Download last-job-built artifact
        uses: actions/download-artifact@v3
        with:
          name: osx-${{ matrix.cpu }}-${{ matrix.type }}
          path: macos-bin/

      - name: Download version
        uses: actions/download-artifact@v3
        with:
          name: version
          path: ./

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt

      - name: Package app
        run: | 
          chmod +x buildAppBundle.sh
          ./buildAppBundle.sh 
        working-directory: ./build/macos

      - name: Package dmg
        continue-on-error: true
        run: | 
          npm install --global create-dmg
          brew install graphicsmagick imagemagick tree
          create-dmg SyncClipboard.app
        working-directory: ./build/macos

      - name: show folder
        run: |
          ls -l
          tree 
        working-directory: ./build/macos
  
      - name: Upload build artifacts ${{ matrix.type }}
        uses: actions/upload-artifact@v3
        with:
          name: SyncClipboard_${{ steps.version.outputs.content }}_macos_${{ matrix.type }}
          path: "build/macos/SyncClipboard ${{ steps.version.outputs.content }}.dmp"